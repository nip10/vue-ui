name: 🚀 Release

on:
  workflow_run:
    workflows:
      - 'Sanity'
    types:
      - completed
    branches:
      - main

jobs:
  placeholder:
    runs-on: ubuntu-latest
    steps:
      - name: Do nothing
        run: echo "This is a placeholder job with no actual steps"
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    if: github.ref == 'refs/heads/main' && github.event.workflow_run.conclusion == 'success'
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          registry-url: 'https://npm.pkg.github.com'
          # Defaults to the user or organization that owns the workflow file
          # scope: '@nip10'

      - name: 📥 Install dependencies
        run: yarn install --frozen-lockfile

      - name: ⚙️ Configure Git
        run: |
          git config --global user.name "Diogo Cardoso"
          git config --global user.email "hi@diogocardoso.dev"

      - name: 📦 Check for Changesets
        id: changeset_check
        run: yarn changeset:status:ci
        continue-on-error: true

      - name: ⬆️ Update Package Version
        if: steps.changeset_check.outcome == 'success'
        run: yarn changeset:version

      - name: 📦 Generate Changelog
        if: if: steps.changeset_check.outcome == 'success'
        run: yarn changeset:generate

      - name: ⬆️ Update Package Version
        if: if: steps.changeset_check.outcome == 'success'
        run: yarn changeset:publish

      - name: 📝 Commit Changes
        if: if: steps.changeset_check.outcome == 'success'
        run: |
          git add .
          git commit -m "chore: Update package versions [skip ci]"
          git push origin main

      - name: 🏷️ Create Tag
        if: if: steps.changeset_check.outcome == 'success'
        run: |
          git fetch --tags
          git tag -a v${{ steps.release.outputs.new_version }} -m "Release v${{ steps.release.outputs.new_version }}"
          git push origin v${{ steps.release.outputs.new_version }}

      - name: 🚀 Publish to GitHub Packages
        if: if: steps.changeset_check.outcome == 'success'
        run: yarn publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
