name: 🚀 Release

on:
  workflow_run:
    workflows:
      - 'Sanity'
    types:
      - completed
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - name: Validate release target
        if: ${{ github.ref_name != github.event.repository.default_branch }}
        run: exit 1
      - name: Validate sanity target
        if: ${{ github.event.workflow_run.conclusion != 'success' }}
        run: exit 1

  release:
    needs: check
    runs-on: ubuntu-latest
    # permissions:
    #   contents: write
    #   packages: write
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          # registry-url: 'https://npm.pkg.github.com'
          # Defaults to the user or organization that owns the workflow file
          # scope: '@nip10'
        # env:
        #   NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Creating .npmrc
        run: echo "//npm.pkg.github.com/:_authToken=${NODE_AUTH_TOKEN}" >> .npmrc
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Creating .yarnrc
        run: echo "//npm.pkg.github.com/:_authToken=${NODE_AUTH_TOKEN}" >> .yarnrc
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 📥 Install dependencies
        run: yarn install --frozen-lockfile --ignore-scripts
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Build
      #   run: yarn build
      # - name: ⚙️ Configure Git
      #   run: |
      #     git config --global user.name "Diogo Cardoso"
      #     git config --global user.email "hi@diogocardoso.dev"
      - name: 📦 Check for Changesets
        # id: changeset_check
        run: yarn changeset:status:ci
        # continue-on-error: true

      - name: ⬆️ Update Package Version
        # if: steps.changeset_check.outcome == 'success'
        run: yarn changeset:version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 🚀 Publish to GitHub Packages
        # if: steps.changeset_check.outcome == 'success'
        uses: changesets/action@v1
        with:
          publish: yarn release
          commit: 'chore: update package versions [skip ci]'
          title: 'chore: update package versions [skip ci]'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: 📝 Commit Changes
      #   if: steps.changeset_check.outcome == 'success'
      #   run: |
      #     git add .
      #     git commit -m "chore: Update package versions [skip ci]"
      #     git push origin main

      # - name: 🏷️ Create Tag
      #   if: steps.changeset_check.outcome == 'success'
      #   run: |
      #     git fetch --tags
      #     git tag -a v${{ steps.release.outputs.new_version }} -m "Release v${{ steps.release.outputs.new_version }}"
      #     git push origin v${{ steps.release.outputs.new_version }}

      # - name: 🚀 Publish to GitHub Packages
      #   if: steps.changeset_check.outcome == 'success'
      #   run: yarn publish
      #   env:
      #     NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Send a Slack notification if a publish happens
      #   if: steps.changesets.outputs.published == 'true'
      #   # You can do something when a publish happens.
      #   run: my-slack-bot send-notification --message "A new version of ${GITHUB_REPOSITORY} was published!"
